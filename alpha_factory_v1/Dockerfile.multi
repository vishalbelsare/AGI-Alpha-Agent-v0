# SPDX-License-Identifier: Apache-2.0
# syntax=docker/dockerfile:1.6
###############################################################################
#  Alpha‑Factory v1 – Multi-stage runtime (CPU & GPU)                          #
#                                                                               #
#  Stage 0  – Build Python dependencies                                         #
#  Stage 1  – Hardened runtime (CPU)                                            #
#  Stage 2  – CUDA runtime (GPU)                                                #
###############################################################################

ARG PYTHON_VERSION=3.11
ARG BASE_IMAGE=python:${PYTHON_VERSION}-slim-bookworm
ARG CUDA_TAG=12.4.0-runtime-ubuntu22.04

# ==================== builder stage =======================================
FROM ${BASE_IMAGE} AS builder
LABEL stage=builder
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential git curl \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency locks for deterministic install
WORKDIR /install
COPY requirements.lock requirements.txt ./

RUN python -m pip install --upgrade pip setuptools wheel
RUN if [ -f requirements.lock ]; then \
        pip install --no-cache-dir -r requirements.lock --require-hashes; \
    else \
        pip install --no-cache-dir -r requirements.txt; \
    fi && \
    python -m compileall -q $(python - <<'EOF'
import site; print('\n'.join(site.getsitepackages()))
EOF
)

# Copy source AFTER deps to leverage Docker layer cache
WORKDIR /app
COPY backend/ ./backend/
COPY ui/ ./ui/
COPY entrypoint.sh ./
RUN chmod +x entrypoint.sh

# ==================== CPU runtime =========================================
FROM ${BASE_IMAGE} AS runtime-cpu
LABEL org.opencontainers.image.title="Alpha‑Factory CPU"
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 \
    ALPHA_VARIANT=cpu \
    PATH=/usr/local/bin:$PATH

RUN adduser --disabled-password --gecos "" appuser
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app
WORKDIR /app
RUN chown -R appuser:appuser /app /usr/local
USER appuser
EXPOSE 8000
CMD ["./entrypoint.sh"]

# ==================== GPU runtime =========================================
FROM nvidia/cuda:${CUDA_TAG} AS runtime-gpu
LABEL org.opencontainers.image.title="Alpha‑Factory GPU"
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 \
    ALPHA_VARIANT=gpu \
    DEBIAN_FRONTEND=noninteractive

# minimally install python
RUN apt-get update && apt-get install -y --no-install-recommends \
        python3 python3-pip \
    && ln -sf python3 /usr/bin/python \
    && rm -rf /var/lib/apt/lists/*

RUN adduser --disabled-password --gecos "" appuser

COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app
WORKDIR /app
RUN chown -R appuser:appuser /app /usr/local
USER appuser
EXPOSE 8000
CMD ["./entrypoint.sh"]
